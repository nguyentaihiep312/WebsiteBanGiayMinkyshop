@page "/product/{id:guid}"
@inject HttpClient HttpClient;
@using Data.Models;
@inject SweetAlertService Swal

<div class="container-fluid p-2" style="height: 100vh;">
    <div class="row">
        <div class="col-lg-12 mx-auto">
            <h6 class="mt-lg-0 mt-4 text-secondary font-weight-bold">@BienTheChiTiet?.Data.SanPham?.Ten</h6>
            <div class="row mt-3">
                @if (BienTheChiTiet?.Data.ThuocTinhs != null)
                {
                    foreach (var x in BienTheChiTiet.Data.ThuocTinhs.Select((Value, Index) => (Index, Value)))
                    {
                        <div class="col-md-2">
                            <label>@x.Value.Ten</label>
                        </div>
                        <div class="col-md-10">
                            <div class="ms-4 d-flex flex-wrap">
                                @if (x.Value.GiaTris != null)
                                {
                                    @foreach (var y in x.Value.GiaTris)
                                    {
                                        <button class="btn btn-sm me-2 @(GiaTris[x.Index] == y.Ten ? "btn-primary" : "")" @onclick='() => { if(GiaTris[x.Index] != y.Ten) { GiaTris[x.Index] = y.Ten; }else{ GiaTris[x.Index] = ""; } }'>@y.Ten</button>
                                    }
                                }
                            </div>
                        </div>
                    }
                }
            </div>
            <div class="d-flex justify-content-end gap-2">
                <button class="btn btn-xs mb-1" onclick='setTimeout(()=>{ document.getElementById("myProduct").scrollBy({ left: -500, top: 0, behavior: "smooth" }) }, 100)'>&lt;</button>
                <button class="btn btn-xs mb-1" onclick='setTimeout(()=>{ document.getElementById("myProduct").scrollBy({ left: 500, top: 0, behavior: "smooth" }) }, 100)'>></button>
            </div>
            <div class="d-flex overflow-hidden gap-1" id="myProduct">
                @if (BienTheChiTiet != null && BienTheChiTiet.Data.SanPham?.BienThes != null)
                {
                    @foreach (var x in BienTheChiTiet.Data.SanPham.BienThes)
                    {
                        <div class="col-4 @LocGiaTri(x)">
                            <div class="card text-center">
                                <img src="@x.Anh" class="card-img-top p-4 py-0">
                                <div class="card-body py-0 pb-1">
                                    <p class="card-text text-sm mb-1">@string.Join(" + ", x.BienTheChiTiets.Select(c => c.GiaTri?.Ten))</p>
                                    <div class="d-flex justify-content-between">
                                        <p class="text-sm text-primary text-bold">@Helper.FormatMoney(x.GiaBan)</p>
                                        <p class="text-sm text-bold">@x.SoLuong</p>
                                    </div>
                                    <div class="d-flex justify-content-between">
                                        <button class="btn mb-0 btn-xs" @onclick='async() => { if(x.SoLuongTam > 0){ x.SoLuongTam -= 1; await ThemSanPham(x, x.SoLuongTam);} }'><i class="fa fa-minus"></i></button>
                                        <input class="form-control mx-1" @bind="@x.SoLuongTam" type="number" min="0" max="50">
                                        <button class="btn mb-0 btn-xs" @onclick='async() => { if(x.SoLuongTam < x.SoLuong){ x.SoLuongTam += 1; await ThemSanPham(x, x.SoLuongTam); } }'><i class="fa fa-plus"></i></button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                }
            </div>
            <div class="d-flex justify-content-end mt-3">
                <button class="btn btn-primary mb-0 mt-lg-auto" data-bs-dismiss="offcanvas" type="button" name="button" @onclick="async () => { if(Sale != null) { await Sale.ThemSanPham(BienThes); } BienThes = new List<BienTheModel>(); }">Thêm Vào Hóa Đơn</button>
            </div>
        </div>
    </div>
</div>

@code{
    [Parameter]
    public Guid Id { get; set; }

    ResponseObject<BienTheChiTietModel>? BienTheChiTiet;

    public List<BienTheModel> BienThes = new List<BienTheModel>();

    [Parameter]
    public Sale.SaleComponent? Sale { get; set; }

    string[] GiaTris = new string[0];

    protected async override Task OnInitializedAsync()
    {
        await Reload();
    }

    protected async override Task OnParametersSetAsync()
    {
        await Reload();
    }

    async Task ThemSanPham(BienTheModel bt, int soLuong)
    {
        var bienThe = BienThes.FirstOrDefault(c => c.Id == bt.Id);
        if(bienThe != null)
        {
            if(soLuong == 0)
            {
                BienThes.Remove(bt);
            }
            else
            {
                bienThe.SoLuongTam = soLuong;
            }
        }
        else
        {
            bt.SanPham = BienTheChiTiet?.Data.SanPham;
            bt.SoLuong = bt.SoLuong;
            bt.SoLuongTam = soLuong;
            BienThes.Add(bt);
        }
    }

    async Task Reload()
    {
        if(Id != Guid.Empty)
        {
            BienTheChiTiet = await HttpClient.GetFromJsonAsync<ResponseObject<BienTheChiTietModel>>($"https://localhost:7053/api/BienThe/{Id}");
            if(BienTheChiTiet != null && BienTheChiTiet.Data.ThuocTinhs != null)
            {
                GiaTris = new string[BienTheChiTiet.Data.ThuocTinhs.Count];
            }
        }
    }

    string LocGiaTri(BienTheModel bt)
    {
        if(bt.BienTheChiTiets != null)
        {
            var bienThe = string.Join(" + ", bt.BienTheChiTiets.OrderBy(c => c.GiaTri?.Ten).Select(c => c.GiaTri?.Ten)) == string.Join(" + ", GiaTris.OrderBy(c => c)) ? true : false;
            if (bienThe)
            {
                return "d-block";
            }
            else
            {
                if (!GiaTris.Any(c => string.IsNullOrEmpty(c)))
                {
                    return "d-none";
                }
            }
        }
        return "d-block";
    }
}