@page "/admin/group"
@page "/admin/group/page/{page:int}"
@using MinkyShopProject.Data.Models
@inject SweetAlertService Swal;
@inject HttpClient HttpClient;
@inject IJSRuntime JSRuntime
<PageTitle>Nhóm Sản Phẩm</PageTitle>

<div class="container-fluid py-4">
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-body">
                    <div class="row">
                        <div class="col-12">
                            <div class="row">
                                <div class="col-3">
                                    <select class="js-choice" @onchange='async (ui) =>{ Filter.TrangThai = int.TryParse(ui.Value?.ToString(), out int numberLocal) ? int.Parse(ui.Value.ToString() ?? "") : null; await Reload(); }'>
                                        <option>Tất Cả</option>
                                        <option value="1">Đang Bán</option>
                                        <option value="0">Ngừng Bán</option>
                                    </select>
                                </div>
                                <div class="col-3">
                                    <select class="js-choice-size" @onchange='async (ui) =>{ Filter.Size = int.TryParse(ui.Value?.ToString(), out int numberLocal) ? int.Parse(ui.Value.ToString() ?? "") : 2; await Reload(); }'>
                                        <option value="2">2 kết quả</option>
                                        @for (int i = 1; i < 5; i++)
                                        {
                                            var index = i * 5;
                                            <option value="@index">@index kết quả</option>
                                        }
                                    </select>
                                </div>
                                <div class="col-3">
                                    <input class="form-control" placeholder="Nhập tên nhóm sản phẩm" @oninput='(ui) => Filter.Ten = ui.Value?.ToString() ?? ""' @onchange="async() => { Page = 1; await Reload(); }" />
                                </div>
                            </div>
                        </div>
                        <div class="col-12 mt-2 text-end">
                            <button class="btn btn-primary btn-sm" @onclick="AddOrUpdateAsync">Lưu Thông Tin</button>
                        </div>
                        <div class="col-6">
                            <label>Nhóm Cha</label>
                            <div class="input-group mb-3">
                                <input type="text" class="form-control" @bind="NhomSanPham.Ten" required>
                            </div>
                        </div>
                        <div class="col-6">
                            <label>Nhóm Con</label>
                            <div class="input-group">
                                <input type="text" required class="form-control" @oninput='(ui) => TenNhomSanPham = ui.Value?.ToString() ?? ""' @onkeyup='((ui) => { if(ui.Code == "Enter"){ if(CheckDuplicateGiaTri(TenNhomSanPham)){ NhomSanPham.NhomSanPhams?.Add(new NhomSanPhamModel(){ Ten = TenNhomSanPham }); } } })'>
                            </div>
                            <div class="d-flex flex-wrap position-relative py-2">
                                <div class="d-flex flex-wrap">
                                    @if (NhomSanPham.NhomSanPhams != null)
                                    {
                                        if (NhomSanPham.Id == Guid.Empty)
                                        {
                                            foreach (var x in NhomSanPham.NhomSanPhams)
                                            {
                                                <span class="badge badge-primary me-2 mb-2 mt-0" style="cursor: pointer" @onmousedown="() => NhomSanPham.NhomSanPhams.Remove(x)">@x.Ten</span>
                                            }
                                        }
                                        else
                                        {
                                            foreach (var x in NhomSanPham.NhomSanPhams)
                                            {
                                                <input class="form-control w-25 me-2" style="width: 30%" @ondblclick="() => NhomSanPham.NhomSanPhams.Remove(x)" @bind="x.Ten">
                                            }
                                        }
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="table-responsive">
                        <table class="table table-bordered align-middle text-center">
                            <thead>
                                <tr>
                                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">STT</th>
                                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7" @onclick='async() => { Filter.Sort = Filter.Sort == "-Ten" ? "+Ten" : "-Ten"; await Reload(); }'>
                                        <div class="d-flex justify-content-between">
                                            <span>Nhóm Sản Phẩm</span>
                                            @if (Filter.Sort != "-Ten")
                                            {
                                                <span class="fa fa-sort-down" style="font-size: 15px"></span>
                                            }
                                            else
                                            {
                                                <span class="fa fa-sort-up" style="font-size: 15px"></span>
                                            }
                                        </div>
                                    </th>
                                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7" @onclick="() => {
                                        if(NhomSanPhams != null){
                                            foreach (var x in NhomSanPhams.Data.Content){
                                                if(x.NhomSanPhams != null)
                                                    x.NhomSanPhams.Reverse();
                                            }
                                        }}">Nhóm Con</th>
                                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7" @onclick='async() => { Filter.Sort = Filter.Sort == "-NgayTao" ? "+NgayTao" : "-NgayTao"; await Reload(); }'>
                                        <div class="d-flex justify-content-between">
                                            <span>Ngày Tạo</span>
                                            @if (Filter.Sort != "-NgayTao")
                                            {
                                                <span class="fa fa-sort-down" style="font-size: 15px"></span>
                                            }
                                            else
                                            {
                                                <span class="fa fa-sort-up" style="font-size: 15px"></span>
                                            }
                                        </div>
                                    </th>
                                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7" @onclick='async() => { Filter.Sort = Filter.Sort == "-TrangThai" ? "+TrangThai" : "-TrangThai"; await Reload(); }'>
                                        <div class="d-flex justify-content-between">
                                            <span>Trạng Thái</span>
                                            @if (Filter.Sort != "-TrangThai")
                                            {
                                                <span class="fa fa-sort-down" style="font-size: 15px"></span>
                                            }
                                            else
                                            {
                                                <span class="fa fa-sort-up" style="font-size: 15px"></span>
                                            }
                                        </div>
                                    </th>
                                    <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Thao Tác</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (NhomSanPhams == null)
                                {
                                    <tr>
                                        <td colspan="6">
                                            <div class="spinner-grow text-primary" role="status">
                                                <span class="sr-only">Loading...</span>
                                            </div>
                                        </td>
                                    </tr>
                                }
                                else
                                {
                                    if (NhomSanPhams.Data.Content.Count() > 0)
                                    {
                                        @foreach (var x in NhomSanPhams.Data.Content.Select((Value, Index) => (Index, Value)).Where(c => c.Value.IdParent == null))
                                        {
                                            <tr>
                                                <td>
                                                    <p class="text-xs font-weight-bold mb-0">@(x.Index + 1)</p>
                                                </td>
                                                <td style="width: 20%">
                                                    <span class="text-secondary text-xs font-weight-bold">@x.Value.Ten</span>
                                                </td>
                                                <td class="p-0 w-25">
                                                    <table class="table table-bordered m-0 border-bottom-0">
                                                        <tbody>
                                                            @if (x.Value.NhomSanPhams != null)
                                                            {
                                                                @foreach (var y in x.Value.NhomSanPhams)
                                                                {
                                                                    <tr class="border-bottom-0">
                                                                        <td class="w-80">
                                                                            <span class="text-secondary text-xs font-weight-bolder">@y.Ten <span class='text-bolder @(y.TrangThai == 0 ? "text-success" : "text-danger")'>@(y.TrangThai == 0 ? "(On)" : "(Off)")</span></span>
                                                                        </td>
                                                                        <td class="text-sm">
                                                                            <a href="javascript:;" @onclick='async() => {
                                                                                var confirm = await Swal.FireAsync(new SweetAlertOptions { Text = "Bạn Có Chắc Muốn Đổi Trạng Thai", ShowConfirmButton = true, ShowCancelButton = true, Icon = SweetAlertIcon.Warning });
                                                                                if (string.IsNullOrEmpty(confirm.Value)) return; 
                                                                                y.TrangThai = y.TrangThai == 0 ? 1 : 0;
                                                                                await DeleteAsync(y.Id); }' data-bs-toggle="tooltip" data-bs-original-title="Delete product">
                                                                                @if (y.TrangThai == 0)
                                                                                {
                                                                                    <i class="fas fa-trash text-danger" aria-hidden="true"></i>
                                                                                }
                                                                                else
                                                                                {
                                                                                    <i class="fas fa-trash-restore text-success" aria-hidden="true"></i>
                                                                                }
                                                                            </a>
                                                                        </td>
                                                                    </tr>
                                                                }
                                                            }
                                                        </tbody>
                                                    </table>
                                                </td>
                                                <td class="align-middle text-center text-sm">
                                                    <span class="text-secondary text-xs font-weight-bold">@x.Value.NgayTao</span>
                                                </td>
                                                <td class="align-middle text-center p-0" style="width: 16%">
                                                    <div class="form-check form-switch justify-content-center">
                                                        <input class="form-check-input" type="checkbox" id="flexSwitchCheckDefault" @attributes='@(x.Value.TrangThai == 1 ? new Dictionary<string, object>() { { "checked", "" } } : new Dictionary<string, object>())' @onclick="async() => { NhomSanPham = x.Value; await UpdateStatus(); }">
                                                    </div>
                                                </td>
                                                <td class="text-sm">
                                                    <a href="javascript:;" class="mx-3" data-bs-toggle="tooltip" data-bs-original-title="Edit product" @onclick="() => NhomSanPham = x.Value">
                                                        <i class="fas fa-user-edit text-warning" aria-hidden="true"></i>
                                                    </a>
                                                </td>
                                            </tr>
                                        }
                                    }
                                    else
                                    {
                                        <tr>
                                            <td colspan="6" class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Không Có Dữ Liệu</td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                    <MinkyShopProject.Admin.Shared.PaginationComponent Model="NhomSanPhams" Url="admin/group"></MinkyShopProject.Admin.Shared.PaginationComponent>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public int Page { get; set; }

    Uri Url = new Uri("https://localhost:7053/api/nhomsanpham");

    string TenNhomSanPham = "";

    NhomSanPhamModel NhomSanPham = new NhomSanPhamModel() { Ten = "" };

    NhomSanPhamQueryModel Filter = new NhomSanPhamQueryModel() { Size = 2, Sort = "-NgayTao" };

    ResponsePagination<NhomSanPhamModel>? NhomSanPhams;

    protected override async Task OnParametersSetAsync()
    {
        await Reload();
    }

    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("choiceLoad", "{'searchEnabled': false}", ".js-choice");
            await JSRuntime.InvokeVoidAsync("choiceLoad", "{'searchEnabled': false}", ".js-choice-size");
        }
    }

    async Task DeleteAsync(Guid id)
    {
        var result = await HttpClient.DeleteAsync(Url.AddQuery("id", id.ToString()));

        if (result.IsSuccessStatusCode)
        {
            await Reload();
            await Swal.FireAsync("", "Cập Nhật thành công", SweetAlertIcon.Success);
        }
        else
        {
            await Swal.FireAsync("", "Cập Nhật Thất Bại", SweetAlertIcon.Success);
        }
    }

    async Task UpdateStatus()
    {
        NhomSanPham.TrangThai = NhomSanPham.TrangThai == 1 ? 0 : 1;

        var result = NhomSanPham.Id == Guid.Empty ? await HttpClient.PostAsJsonAsync<NhomSanPhamModel>(Url, NhomSanPham) : await HttpClient.PutAsJsonAsync<NhomSanPhamModel>(Url.AddQuery("id", NhomSanPham.Id.ToString()), NhomSanPham);

        if (result.IsSuccessStatusCode)
        {
            NhomSanPhamModel NhomSanPham = new NhomSanPhamModel() { Ten = "" };
            await Reload();
            await Swal.FireAsync("", "Sửa thành công", SweetAlertIcon.Success);
        }
        else
        {
            await Swal.FireAsync("", "Cập Nhật Thất Bại", SweetAlertIcon.Success);
        }
    }

    bool CheckDuplicateGiaTri(string value)
    {
        if (NhomSanPhams != null && NhomSanPham.NhomSanPhams != null)
            return string.IsNullOrEmpty(value.Trim()) || NhomSanPham.NhomSanPhams.Any(c => c.Ten.ToTitleCase() == value.ToTitleCase()) || value.CheckCharacterSpecial() ? false : true;
        return false;
    }

    async Task AddOrUpdateAsync()
    {
        if (string.IsNullOrEmpty(NhomSanPham.Ten.Trim()))
        {
            await Swal.FireAsync("", "Tên Thuộc Tính Không Thể Trống", SweetAlertIcon.Error);
        }
        else if (NhomSanPham.Ten.Length < 3)
        {
            await Swal.FireAsync("", "Tên Thuộc Tính Phải Có Ít Nhất 3 Ký Tự", SweetAlertIcon.Error);
        }
        else if (NhomSanPham.Ten.CheckCharacterSpecial())
        {
            await Swal.FireAsync("", "Tên Thuộc Tính Không Thể Chứa Ký Tự Đặc Biệt", SweetAlertIcon.Error);
        }
        else if (NhomSanPham.Id == Guid.Empty && NhomSanPhams != null && NhomSanPhams.Data.Content.Any(c => c.Ten.ToTitleCase() == NhomSanPham.Ten.ToTitleCase()))
        {
            await Swal.FireAsync("", "Thuộc Tính Này Đã Tồn Tại", SweetAlertIcon.Error);
        }
        else if (NhomSanPham.NhomSanPhams?.Count() <= 0)
        {
            await Swal.FireAsync("", "Phải Có Ít Nhất Một Giá Trị", SweetAlertIcon.Error);
        }
        else
        {
            if (NhomSanPham.NhomSanPhams != null)
            {
                if (NhomSanPham.NhomSanPhams.Any(c => string.IsNullOrEmpty(c.Ten) || c.Ten.CheckCharacterSpecial()))
                {
                    await Swal.FireAsync("", "Vui Lòng Kiểm Tra Lại Các Giá Trị", SweetAlertIcon.Error);
                    return;
                }
            }

            var confirm = await Swal.FireAsync(new SweetAlertOptions { Text = "Bạn Có Chắc Muốn Thêm", ShowConfirmButton = true, ShowCancelButton = true, Icon = SweetAlertIcon.Warning });

            if (string.IsNullOrEmpty(confirm.Value)) return;

            var result = NhomSanPham.Id == Guid.Empty ? await HttpClient.PostAsJsonAsync<NhomSanPhamModel>(Url, NhomSanPham) : await HttpClient.PutAsJsonAsync<NhomSanPhamModel>(Url.AddQuery("id", NhomSanPham.Id.ToString()), NhomSanPham);

            if (result.IsSuccessStatusCode)
            {
                await Reload();
                await Swal.FireAsync("", "Thành công", SweetAlertIcon.Success);
            }
            else
            {
                await Swal.FireAsync("", "Cập Nhật Thất Bại", SweetAlertIcon.Success);
            }
        }
    }

    async Task Reload()
    {
        if (Page == 0) Page = 1;
        NhomSanPham = new NhomSanPhamModel() { Ten = "" };
        var s = Url.AddQuery("page", Page.ToString()).AddQuery("size", Filter.Size.ToString() ?? "2").AddQuery("trangthai", Filter.TrangThai.ToString() ?? "").AddQuery("ten", Filter.Ten ?? "").AddQuery("sort", Filter.Sort);
        NhomSanPhams = await HttpClient.GetFromJsonAsync<ResponsePagination<NhomSanPhamModel>>(Url + "/get2" + s.Query);
        TenNhomSanPham = "";
    }
}