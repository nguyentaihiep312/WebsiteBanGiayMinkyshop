@page "/profile";
@inject SweetAlertService Swal;
@using MinkyShopProject.Data.Models;
@inject HttpClient HttpClient;
@inject Blazored.SessionStorage.ISessionStorageService Session

<div class="container rounded bg-white mt-5 mb-5" style="background: white">
    <div class="row">
        <div class="col-md-3 border-right">
            <div class="d-flex flex-column align-items-center text-center p-3 py-5"><img class="rounded-circle mt-5" width="150px" src="@khachhang.Anh"></div>
            <InputFile OnChange="e => { loadedFiles.Clear(); loadedFiles.Add(e.File); }" />
        </div>
        <div class="col-md-5 border-right">
            <EditForm Model="khachhang" OnSubmit="AddOrUpdateAsync">
                <div class="p-3 py-5">
                    <div class="d-flex justify-content-between align-items-center mb-3">
                        <h4 class="text-right">Thông tin cá nhân</h4>
                    </div>
                    <div class="row mt-2">
                        <div class="col-md-12"><label class="labels">Họ và tên</label><input type="text" class="form-control" @bind="khachhang.Ten" placeholder="Họ và tên"></div>
                    </div>
                    <div class="row mt-3">
                        <div class="col-md-6 mb-2"><label class="labels">Địa chỉ</label><input type="text" class="form-control" placeholder="Địa chỉ" @bind="khachhang.DiaChi"></div>
                        <div class="col-md-6 mb-2"><label class="labels">Số điện thoại</label><input type="text" class="form-control" placeholder="Số điện thoại" @bind="khachhang.Sdt"></div>
                        <div class="col-md-6 mb-2"><label class="labels">Ngày sinh</label><input type="date" class="form-control" @bind="khachhang.NgaySinh"></div>
                        <div class="col-md-6 mb-2">
                            <label>Giới tính</label>
                            <div class="d-flex">
                                <div class="form-check mr-3">
                                    <input class="form-check-input" type="radio" name="flexRadioDefault2" @attributes='khachhang.GioiTinh == true ? new Dictionary<string, object>(){ { "checked", "" } } : null' @onclick="() => khachhang.GioiTinh = true">
                                    <label class="custom-control-label">Nam</label>
                                </div>
                                <div class="form-check">
                                    <input class="form-check-input" type="radio" name="flexRadioDefault2" @attributes='khachhang.GioiTinh == false ? new Dictionary<string, object>(){ { "checked", "" } } : null' @onclick="() => khachhang.GioiTinh = false">
                                    <label class="custom-control-label">Nữ</label>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="mt-5 text-center"><button class="btn_1" type="submit">Lưu thông tin</button></div>
                    <div class="mt-5 text-center"><button type="button" class="btn_1" @onclick="() => ChangePass = !ChangePass">@(ChangePass ? "Hủy" : "Đổi Mật Khẩu")</button></div>
                </div>
            </EditForm>
        </div>
        @if (ChangePass)
        {
            <div class="col-md-3 border-right">
                <div class="d-flex justify-content-between align-items-center mb-3 pt-5 ml-3">
                    <h4 class="text-right">Đổi mật khẩu</h4>
                </div>
                <div class="col-md-12 mb-2"><label class="labels">Mật Khẩu Hiện Tại</label><input @bind="MatKhauHienTai" type="password" class="form-control"></div>
                <div class="col-md-12 mb-2"><label class="labels">Mật Khẩu Mới</label><input type="password" class="form-control" @bind="MatKhau"></div>
                <div class="col-md-12 mb-2"><label class="labels">Nhập Lại Mật Khẩu</label><input type="password" class="form-control" @bind="NhapLaiMatKhau"></div>
                <div class="col-md-12 mb-2"><button class="btn_1" @onclick="ChangePassword">Xác Nhận</button></div>
            </div>
        }
    </div>
</div>

@code{
    Uri Url = new Uri("https://localhost:7053/api/khachhang");

    bool ChangePass = false;

    string MatKhauHienTai = "";
    string MatKhau = "";
    string NhapLaiMatKhau = "";

    private List<IBrowserFile> loadedFiles = new();

    KhachHangThemVaSuaModel khachhang = new KhachHangThemVaSuaModel();

    List<string> fileNames = new List<string>();

    async Task ChangePassword()
    {
        if (string.IsNullOrEmpty(MatKhau.Trim()) || string.IsNullOrEmpty(MatKhauHienTai.Trim()) || string.IsNullOrEmpty(NhapLaiMatKhau.Trim()))
        {
            await Swal.FireAsync("", "Không được bỏ trống", SweetAlertIcon.Error);
        }
        else if (MatKhauHienTai != khachhang.MatKhau)
        {
            await Swal.FireAsync("", "Mật Khẩu Không Đúng", SweetAlertIcon.Error);
        }else if (MatKhau != NhapLaiMatKhau)
        {
            await Swal.FireAsync("", "Mật Khẩu Không Khớp", SweetAlertIcon.Error);
        }
        else
        {
            var s = Url.AddQuery("id", khachhang.Id.ToString());
            khachhang.MatKhau = MatKhau;
            var result = await HttpClient.PutAsJsonAsync<KhachHangThemVaSuaModel>(new Uri(Url + "/Update" + s.Query), khachhang);

            if (result.IsSuccessStatusCode)
            {
                khachhang = new KhachHangThemVaSuaModel();
                MatKhau = "";
                MatKhauHienTai = "";
                NhapLaiMatKhau = "";
                ChangePass = false;
                await Swal.FireAsync("Thông Báo", "Cập Nhật Thành công", SweetAlertIcon.Success);
            }
        }
    }

    protected override async Task OnInitializedAsync()
    {
        var khachHang2 = await Session.GetItemAsync<KhachHangModel>("khachHang");
        if(khachHang2 != null)
        {
            var result = await HttpClient.GetFromJsonAsync<ResponseObject<KhachHangThemVaSuaModel>>($"https://localhost:7053/api/KhachHang/{khachHang2.Id}/GetById");
            if (result != null)
            {
                khachhang = result.Data;
            }
        }
    }

    async Task AddOrUpdateAsync(EditContext context)
    {
        if (context.Validate())
        {
            var confirm = await Swal.FireAsync(new SweetAlertOptions { Title = "Bạn Có Chắc Muốn Sửa", ShowConfirmButton = true, ShowCancelButton = true, Icon = SweetAlertIcon.Warning });

            if (string.IsNullOrEmpty(confirm.Value)) return;

            using var content = new MultipartFormDataContent();

            @if(loadedFiles != null && loadedFiles.Any())
            {
                foreach (var file in loadedFiles)
                {
                    var fileContent = new StreamContent(file.OpenReadStream());
                    fileContent.Headers.ContentType = new System.Net.Http.Headers.MediaTypeHeaderValue(file.ContentType);
                    fileNames.Add(file.Name);
                    content.Add(content: fileContent, name: "\"files\"", fileName: file.Name);
                }
                var resultImage = await HttpClient.PostAsync("https://localhost:7053/api/image/khachhang", content);
                if (resultImage.IsSuccessStatusCode)
                {
                    var anh = await resultImage.Content.ReadFromJsonAsync<List<UploadResult>>();
                    if (anh != null)
                    {
                        khachhang.Anh = "https://localhost:7053/images/khach/" + anh[0].StoredFileName;
                    }
                }
                else
                {
                    await Swal.FireAsync("", "Lỗi Ảnh", SweetAlertIcon.Error);
                }
            }

            var s = Url.AddQuery("id", khachhang.Id.ToString());
            var result = await HttpClient.PutAsJsonAsync<KhachHangThemVaSuaModel>(new Uri(Url + "/Update" + s.Query), khachhang);

            if (result.IsSuccessStatusCode)
            {
                khachhang = new KhachHangThemVaSuaModel();
                await Swal.FireAsync("Thông Báo", "Cập Nhật Thành công", SweetAlertIcon.Success);
            }
        }
        else
        {
            await Swal.FireAsync("", string.Join("<br>", context.GetValidationMessages().Select(c => c)), SweetAlertIcon.Error);
        }
    }
}
