@page "/"
@page "/home"
@inject IJSRuntime JSRuntime
@inject HttpClient HttpClient
@inject SweetAlertService Swal

<main>
	<div id="carousel-home">
		<div class="owl-carousel owl-theme">
			@if (Vouchers == null)
			{
				<p>Loading...</p>
			}
			else
			{
				@foreach (var x in Vouchers)
				{
					<div class="owl-slide cover" style="background-image: url(img/slides/slide_home_2.jpg);">
						<div class="opacity-mask d-flex align-items-center" data-opacity-mask="rgba(0, 0, 0, 0.5)">
							<div class="container">
								<div class="row justify-content-center justify-content-md-end">
									<div class="col-lg-6 static">
										<div class="slide-text text-right white">
											<h2 class="owl-slide-animated owl-slide-title">@x.Ten (Còn lại @x.SoLuong)</h2>
                                            <p class="owl-slide-animated owl-slide-subtitle">
                                                @x.MoTa
                                            </p>
											<p>Áp dụng cho đơn hàng từ @Helper.FormatMoney(x.SoTienCan) trở lên đến ngày @x.NgayKetThuc.ToShortDateString()</p>
                                            <div class="owl-slide-animated owl-slide-cta"><a class="btn_1" role="button" @onclick='async () => await Swal.FireAsync("", "Mã của bạn là " + x.Ma, SweetAlertIcon.Success)'>Lấy mã</a></div>
										</div>
									</div>
								</div>
							</div>
						</div>
					</div>
				}
			}
		</div>
		<div id="icon_drag_mobile"></div>
	</div>
	<!--/carousel-->

	<ul id="banners_grid" class="clearfix">
		@if (NhomSanPhams != null)
		{
			@foreach (var x in NhomSanPhams.Select((v, i) => (i, v)))
			{
				@if (x.i < 3)
				{
					<li>
						<a href="#0" class="img_container">
							<img src="img/banner_@(x.i + 1).jpg" data-src="img/banner_@(x.i + 1).jpg" alt="" class="lazy">
							<div class="short_info opacity-mask" data-opacity-mask="rgba(0, 0, 0, 0.5)">
								<h3>@x.v.Ten</h3>
								<div><span class="btn_1">Shop Now</span></div>
							</div>
						</a>
					</li>
				}
			}
		}
	</ul>
	<!--/banners_grid -->

	<div class="container margin_60_35">
		<div class="main_title">
			<h2>Sản Phẩm Mới</h2>
		</div>
		<div class="row small-gutters">
			@if (SanPhams != null)
			{
				@foreach (var x in SanPhams.Data.Content.Select((v, i) => (i, v)))
				{
					@if(x.i < 9)
					{
						<div class="col-6 col-md-4 col-xl-3">
							<div class="grid_item">
								<figure>
									<a href="product-detail-1.html">
										<img class="img-fluid lazy" src="@x.v.Anh" data-src="@x.v.Anh" alt="">
									</a>
								</figure>
								<NavLink href="@($"/product/{x.v.Id}")">
									<h3>@x.v.Ten</h3>
								</NavLink>
								<div class="price_box">
									<span class="new_price">@Helper.FormatMoney(x.v.BienThes?.Min(c => c.GiaBan))</span>
								</div>
							</div>
							<!-- /grid_item -->
						</div>
					}
				}
			}
			<!-- /col -->
		</div>
		<!-- /row -->
	</div>
	<!-- /container -->

	<div class="featured lazy" data-bg="url(img/featured_home.jpg)">
	</div>
	<!-- /featured -->
	<!-- /container -->
</main>

@code {
	List<MinkyShopProject.Data.Models.VoucherModel>? Vouchers;

	List<MinkyShopProject.Data.Models.NhomSanPhamModel>? NhomSanPhams;

	ResponsePagination<MinkyShopProject.Data.Models.SanPhamModel>? SanPhams;

	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		var result = await HttpClient.GetFromJsonAsync<ResponsePagination<MinkyShopProject.Data.Models.NhomSanPhamModel>>("https://localhost:7053/api/NhomSanPham/Get2");
		if (result != null)
		{
			NhomSanPhams = result.Data.Content;
		}

		var result3 = await HttpClient.GetFromJsonAsync<ResponsePagination<MinkyShopProject.Data.Models.VoucherModel>>("https://localhost:7053/api/Voucher");
		if (result3 != null)
		{
			Vouchers = result3.Data.Content;
		}
		await JSRuntime.InvokeAsync<string>("sliderFunctions.startSlider", null);
	}

	protected async override Task OnInitializedAsync()
	{

		SanPhams = await HttpClient.GetFromJsonAsync<ResponsePagination<MinkyShopProject.Data.Models.SanPhamModel>>("https://localhost:7053/api/SanPham");

		var result = await HttpClient.GetFromJsonAsync<ResponsePagination<MinkyShopProject.Data.Models.NhomSanPhamModel>>("https://localhost:7053/api/NhomSanPham/Get2");
		if (result != null)
		{
			NhomSanPhams = result.Data.Content;
		}

		var result2 = await HttpClient.GetFromJsonAsync<ResponsePagination<MinkyShopProject.Data.Models.VoucherModel>>("https://localhost:7053/api/Voucher");
		if (result2 != null)
		{
			Vouchers = result2.Data.Content;
		}
	    await JSRuntime.InvokeAsync<string>("sliderFunctions.startSlider", null);
	}
}
